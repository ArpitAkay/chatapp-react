(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[87349],{421394:function(e,t,o){var n={"./accordion.json":749106,"docs/translations/api-docs/accordion/accordion.json":749106};function i(e){return o(s(e))}function s(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=421394},946052:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return r}}),o(827378);var n=o(138567),i=o(275264),s=JSON.parse('{"props":{"children":{"type":{"name":"custom","description":"node"},"required":true},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"defaultExpanded":{"type":{"name":"bool"},"default":"false"},"disabled":{"type":{"name":"bool"},"default":"false"},"disableGutters":{"type":{"name":"bool"},"default":"false"},"expanded":{"type":{"name":"bool"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, expanded: boolean) => void","describedArgs":["event","expanded"]}},"square":{"type":{"name":"bool"},"default":"false"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"TransitionComponent":{"type":{"name":"elementType"},"default":"Collapse"},"TransitionProps":{"type":{"name":"object"}}},"name":"Accordion","imports":["import Accordion from \'@mui/material/Accordion\';","import { Accordion } from \'@mui/material\';"],"classes":[{"key":"disabled","className":"Mui-disabled","description":"State class applied to the root element if `disabled={true}`.","isGlobal":true},{"key":"expanded","className":"Mui-expanded","description":"State class applied to the root element if `expanded={true}`.","isGlobal":true},{"key":"gutters","className":"MuiAccordion-gutters","description":"Styles applied to the root element unless `disableGutters={true}`.","isGlobal":false},{"key":"region","className":"MuiAccordion-region","description":"Styles applied to the region element, the container of the children.","isGlobal":false},{"key":"root","className":"MuiAccordion-root","description":"Styles applied to the root element.","isGlobal":false},{"key":"rounded","className":"MuiAccordion-rounded","description":"Styles applied to the root element unless `square={true}`.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"MuiAccordion","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/Accordion/Accordion.js","inheritance":{"component":"Paper","pathname":"/material-ui/api/paper/"},"demos":"<ul><li><a href=\\"/material-ui/react-accordion/\\">Accordion</a></li></ul>","cssComponent":false}'),a=o(824246);function r(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}r.getInitialProps=function(){var e=o(421394);return{descriptions:(0,i.Z)(e),pageContent:s}}},634903:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/accordion",function(){return o(946052)}])},749106:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":{"description":"The content of the component."},"classes":{"description":"Override or extend the styles applied to the component."},"defaultExpanded":{"description":"If <code>true</code>, expands the accordion by default."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableGutters":{"description":"If <code>true</code>, it removes the margin between two expanded accordion items and the increase of height."},"expanded":{"description":"If <code>true</code>, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion."},"onChange":{"description":"Callback fired when the expand/collapse state is changed.","typeDescriptions":{"event":"The event source of the callback. <strong>Warning</strong>: This is a generic event not a change event.","expanded":"The <code>expanded</code> state of the accordion."}},"square":{"description":"If <code>true</code>, rounded corners are disabled."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"TransitionComponent":{"description":"The component used for the transition. <a href=\\"/material-ui/transitions/#transitioncomponent-prop\\">Follow this guide</a> to learn more about the requirements for this component."},"TransitionProps":{"description":"Props applied to the transition element. By default, the element is based on this <a href=\\"http://reactcommunity.org/react-transition-group/transition/\\"><code>Transition</code></a> component."}},"classDescriptions":{"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>expanded={true}</code>"},"gutters":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the root element","conditions":"<code>disableGutters={true}</code>"},"region":{"description":"Styles applied to {{nodeName}}, {{conditions}}.","nodeName":"the region element","conditions":"the container of the children"},"root":{"description":"Styles applied to the root element."},"rounded":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the root element","conditions":"<code>square={true}</code>"}}}')}},function(e){e.O(0,[2581,39456,18335,55308,15794,20933,45038,14738,58849,79125,19158,3583,53280,37853,12094,90565,38567,43120,49774,92888,40179],function(){return e(e.s=634903)}),_N_E=e.O()}]);