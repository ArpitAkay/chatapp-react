(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[85951],{185411:function(e,t,o){var n={"./input.json":345536,"docs/translations/api-docs/input/input.json":345536};function i(e){return o(s(e))}function s(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=185411},991851:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return d}}),o(827378);var n=o(138567),i=o(275264),s=JSON.parse('{"props":{"autoComplete":{"type":{"name":"string"}},"autoFocus":{"type":{"name":"bool"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;string"}},"components":{"type":{"name":"shape","description":"{ Input?: elementType, Root?: elementType }"},"default":"{}"},"componentsProps":{"type":{"name":"shape","description":"{ input?: object, root?: object }"},"default":"{}"},"defaultValue":{"type":{"name":"any"}},"disabled":{"type":{"name":"bool"}},"disableUnderline":{"type":{"name":"bool"}},"endAdornment":{"type":{"name":"node"}},"error":{"type":{"name":"bool"}},"fullWidth":{"type":{"name":"bool"},"default":"false"},"id":{"type":{"name":"string"}},"inputComponent":{"type":{"name":"elementType"},"default":"\'input\'"},"inputProps":{"type":{"name":"object"},"default":"{}"},"inputRef":{"type":{"name":"custom","description":"ref"}},"margin":{"type":{"name":"enum","description":"\'dense\'<br>&#124;&nbsp;\'none\'"}},"maxRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"minRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"multiline":{"type":{"name":"bool"},"default":"false"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void","describedArgs":["event"]}},"placeholder":{"type":{"name":"string"}},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"rows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"slotProps":{"type":{"name":"shape","description":"{ input?: object, root?: object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, root?: elementType }"},"default":"{}"},"startAdornment":{"type":{"name":"node"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"type":{"type":{"name":"string"},"default":"\'text\'"},"value":{"type":{"name":"any"}}},"name":"Input","imports":["import Input from \'@mui/material/Input\';","import { Input } from \'@mui/material\';"],"classes":[{"key":"colorSecondary","className":"MuiInput-colorSecondary","description":"Styles applied to the root element if color secondary.","isGlobal":false},{"key":"disabled","className":"Mui-disabled","description":"Styles applied to the root element if `disabled={true}`.","isGlobal":true},{"key":"error","className":"Mui-error","description":"State class applied to the root element if `error={true}`.","isGlobal":true},{"key":"focused","className":"Mui-focused","description":"Styles applied to the root element if the component is focused.","isGlobal":true},{"key":"formControl","className":"MuiInput-formControl","description":"Styles applied to the root element if the component is a descendant of `FormControl`.","isGlobal":false},{"key":"fullWidth","className":"MuiInput-fullWidth","description":"Styles applied to the root element if `fullWidth={true}`.","isGlobal":false},{"key":"input","className":"MuiInput-input","description":"Styles applied to the input element.","isGlobal":false},{"key":"inputAdornedEnd","className":"MuiInput-inputAdornedEnd","description":"Styles applied to the input element if `endAdornment` is provided.","isGlobal":false},{"key":"inputAdornedStart","className":"MuiInput-inputAdornedStart","description":"Styles applied to the input element if `startAdornment` is provided.","isGlobal":false},{"key":"inputMultiline","className":"MuiInput-inputMultiline","description":"Styles applied to the input element if `multiline={true}`.","isGlobal":false},{"key":"inputSizeSmall","className":"MuiInput-inputSizeSmall","description":"Styles applied to the input element if `size=\\"small\\"`.","isGlobal":false},{"key":"inputTypeSearch","className":"MuiInput-inputTypeSearch","description":"Styles applied to the input element if `type=\\"search\\"`.","isGlobal":false},{"key":"multiline","className":"MuiInput-multiline","description":"Styles applied to the root element if `multiline={true}`.","isGlobal":false},{"key":"root","className":"MuiInput-root","description":"Styles applied to the root element.","isGlobal":false},{"key":"sizeSmall","className":"MuiInput-sizeSmall","description":"Styles applied to the input element if `size=\\"small\\"`.","isGlobal":false},{"key":"underline","className":"MuiInput-underline","description":"Styles applied to the root element unless `disableUnderline={true}`.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"MuiInput","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/Input/Input.js","inheritance":{"component":"InputBase","pathname":"/material-ui/api/input-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-text-field/\\">Text Field</a></li></ul>","cssComponent":false}'),r=o(824246);function d(e){var t=e.descriptions,o=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:o})}d.getInitialProps=function(){var e=o(185411);return{descriptions:(0,i.Z)(e),pageContent:s}}},593787:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/input",function(){return o(991851)}])},345536:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"autoComplete":{"description":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\\">following the specification</a>."},"autoFocus":{"description":"If <code>true</code>, the <code>input</code> element is focused during the first mount."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>. The prop defaults to the value (<code>&#39;primary&#39;</code>) inherited from the parent FormControl component."},"components":{"description":"The components used for each slot inside.<br>This prop is an alias for the <code>slots</code> prop. It&#39;s recommended to use the <code>slots</code> prop instead."},"componentsProps":{"description":"The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>slotProps</code> prop. It&#39;s recommended to use the <code>slotProps</code> prop instead, as <code>componentsProps</code> will be deprecated in the future."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"disableUnderline":{"description":"If <code>true</code>, the <code>input</code> will not have an underline."},"endAdornment":{"description":"End <code>InputAdornment</code> for this component."},"error":{"description":"If <code>true</code>, the <code>input</code> will indicate an error. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"fullWidth":{"description":"If <code>true</code>, the <code>input</code> will take up the full width of its container."},"id":{"description":"The id of the <code>input</code> element."},"inputComponent":{"description":"The component used for the <code>input</code> element. Either a string to use a HTML element or a component."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"margin":{"description":"If <code>dense</code>, will adjust vertical spacing. This is normally obtained via context from FormControl. The prop defaults to the value (<code>&#39;none&#39;</code>) inherited from the parent FormControl component."},"maxRows":{"description":"Maximum number of rows to display when multiline option is set to true."},"minRows":{"description":"Minimum number of rows to display when multiline option is set to true."},"multiline":{"description":"If <code>true</code>, a <a href=\\"/material-ui/react-textarea-autosize/\\">TextareaAutosize</a> element is rendered."},"name":{"description":"Name attribute of the <code>input</code> element."},"onChange":{"description":"Callback fired when the value is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string)."}},"placeholder":{"description":"The short hint displayed in the <code>input</code> before the user enters a value."},"readOnly":{"description":"It prevents the user from changing the value of the field (not from interacting with the field)."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"rows":{"description":"Number of rows to display when multiline option is set to true."},"slotProps":{"description":"The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>componentsProps</code> prop, which will be deprecated in the future."},"slots":{"description":"The components used for each slot inside.<br>This prop is an alias for the <code>components</code> prop, which will be deprecated in the future."},"startAdornment":{"description":"Start <code>InputAdornment</code> for this component."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"type":{"description":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>."},"value":{"description":"The value of the <code>input</code> element, required for a controlled component."}},"classDescriptions":{"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"color secondary"},"disabled":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"error":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>error={true}</code>"},"focused":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is focused"},"formControl":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is a descendant of <code>FormControl</code>"},"fullWidth":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>fullWidth={true}</code>"},"input":{"description":"Styles applied to {{nodeName}}.","nodeName":"the input element"},"inputAdornedEnd":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>endAdornment</code> is provided"},"inputAdornedStart":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>startAdornment</code> is provided"},"inputMultiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>multiline={true}</code>"},"inputSizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>size=\\"small\\"</code>"},"inputTypeSearch":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>type=\\"search\\"</code>"},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>multiline={true}</code>"},"root":{"description":"Styles applied to the root element."},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>size=\\"small\\"</code>"},"underline":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the root element","conditions":"<code>disableUnderline={true}</code>"}}}')}},function(e){e.O(0,[2581,39456,18335,55308,15794,20933,45038,14738,58849,79125,19158,3583,53280,37853,12094,90565,38567,43120,49774,92888,40179],function(){return e(e.s=593787)}),_N_E=e.O()}]);